swagger: '2.0'
info: {description: urlcheck is a url monitoring service, title: urlcheck, version: 0.0.1}
schemes: [https]
basePath: /prod
paths:
  /check/candidate:
    post:
      consumes: [application/json]
      description: Returns candidates for the specified region
      parameters:
        - description: Candidate request
          in: body
          name: CandidateRequest
          required: true
          schema: {$ref: '#/definitions/CandidateRequest'}
      produces: [application/json]
      responses:
        200:
          description: Contact email sent successfully
          schema:
            type: array
            items: {$ref: '#/definitions/Candidate'}
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default: {statusCode: '200'}
        type: aws_proxy
        uri: arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:326341022855:function:urlcheck-api-check-candidates/invocations
  /check/result:
    post:
      consumes: [application/json]
      description: Submit check results
      parameters:
        - description: Check results
          in: body
          name: CheckResults
          required: true
          schema:
            type: array
            items: {$ref: '#/definitions/CheckResult'}
      produces: [application/json]
      responses:
        202:
          description: Check results submitted successfully
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default: {statusCode: '200'}
        type: aws_proxy
        uri: arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:326341022855:function:urlcheck-api-check-results/invocations
definitions:
  CandidateRequest:
    properties:
      region: {type: string}
    type: object
  Candidate:
    properties:
      id: {type: string}
      protocol: {type: string}
      url: {type: string}
    type: object
  CheckResult:
    properties:
      id: {type: string}
      statusCode: {type: number}
    type: object
